before_script:
  # is only executed for the deploy stages that need to ssh
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - ssh-add -l
  - mkdir -p ~/.ssh
  - ls -la ~
  - ls -la ~/.ssh
  - touch ~/.ssh/known_hosts
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  #- chmod 600 ~/.ssh
  # webserver certificates
  #- echo "$CERTIFICATE_KEY" > ./certs/cert.key
  #- echo "$CERTIFICATE_CRT" > ./certs/cert.crt
 
variables:
  REGISTRY: registry.gitlab.com

stages:
  - build
  - deploy

#build-container:
#  stage: build
#  before_script: 
#    - "echo Build Container..."
#  script:
#    - "echo Code goes here"
#    # login to registry
#    # - docker login -u mimir_mvp -p "$REGISTRY_TOKEN" "$REGISTRY"
#    # pull from registry, build if not existant
#    # - docker-compose build --no-cache --pull
#    # optional: save image to tarball, tag it and push it
#    # - docker save --output images/mimir.img mimir_mimir
#    # - docker tag mimir_mimir "$REGISTRY/wobcom/mimir"
#    # - docker push "$REGISTRY/wobcom/mimir"
#  tags:
#    - dummy

build-package:
  stage: build
  only:
    - ci_development
  image: registry.gitlab.com/wobcom/fpm-docker:netbox
  tags:
    - docker
  before_script:
    - "git config --global credential.helper store"
    - "git config --global credential.gitlab.service.wobcom.de.useHttpPath true"
    - "git config --global credential.gitlab.com.useHttpPath true"
    - "echo https://${DIPLOMACY_CREDENTIALS}@gitlab.service.wobcom.de/infrastructure/diplomacy.git >> ~/.git-credentials"
    - "echo https://${TOPDESK_CREDENTIALS}@gitlab.com/wobcompublic/topdesk/ >> ~/.git-credentials"
  script:
    - "python3 -m venv venv"
    - "venv/bin/pip install -r requirements.txt"
    - "cp netbox/netbox/configuration.example.py netbox/netbox/configuration.py"
    - "sed -i \"s/SECRET_KEY = ''/SECRET_KEY = 'sample_key_do_not_use_in_production'/g\" netbox/netbox/configuration.py"
    - "venv/bin/python netbox/manage.py collectstatic"
    - "cp netbox/netbox/configuration.example.py netbox/netbox/configuration.py"
    - "fpm -s dir -t rpm -p netbox.rpm --prefix /opt/netbox/ -n netbox --iteration $(git rev-list --all --count) -d postgresql-server -d redis --config-files netbox/netbox/configuration.py --directories /opt/netbox ./"
  artifacts:
    paths:
      - netbox.rpm

deploy-staging-ssh:
  stage: deploy
  only: 
    - changes
  script:
    - "ssh -t $SSH_USER@$DEPLOY_SERVER_STAGING 'rm -rf /var/tmp/autodeploy'"
    - "ssh -t $SSH_USER@$DEPLOY_SERVER_STAGING 'mkdir -p /var/tmp/autodeploy'"
    - "echo \"BIND_HOST=$DEPLOY_SERVER_STAGING\" > .env"
    - "scp .env $SSH_USER@$DEPLOY_SERVER_STAGING:/var/tmp/autodeploy/"
    - "scp deploy.sh $SSH_USER@$DEPLOY_SERVER_STAGING:/var/tmp/autodeploy/deploy.sh"
    - ssh -t "$SSH_USER@$DEPLOY_SERVER_STAGING" "cd /var/tmp/autodeploy && bash -x ./deploy.sh $DEPLOY_BRANCH_STAGING"
  tags:
    - ssh

deploy-production-ssh:
  stage: deploy
  only: 
    - changes-master
  script:
    - "ssh -t $SSH_USER@$DEPLOY_SERVER_PRODUCTION 'rm -rf /var/tmp/autodeploy'"
    - "ssh -t $SSH_USER@$DEPLOY_SERVER_PRODUCTION 'mkdir -p /var/tmp/autodeploy'"
    - "echo \"BIND_HOST=$DEPLOY_SERVER_PRODUCTION\" > .env"
    - "scp .env $SSH_USER@$DEPLOY_SERVER_PRODUCTION:/var/tmp/autodeploy/"
    - "scp deploy.sh $SSH_USER@$DEPLOY_SERVER_PRODUCTION:/var/tmp/autodeploy/deploy.sh"
    # - ssh -t "$SSH_USER@$DEPLOY_SERVER_STAGING" "cd /var/tmp/autodeploy && bash -x ./deploy.sh $DEPLOY_BRANCH_PRODUCTION"
    #- "ssh -t $SSH_USER@$DEPLOY_SERVER_PRODUCTION 'cd /var/tmp/autodeploy && bash -x ./deploy.sh changes-master'"
  tags:
    - ssh

