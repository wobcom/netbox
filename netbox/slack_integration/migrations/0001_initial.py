# Generated by Django 2.2.11 on 2020-03-27 12:04

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SlackMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=127)),
                ('on_create', models.BooleanField(default=False)),
                ('on_update', models.BooleanField(default=False)),
                ('on_delete', models.BooleanField(default=False)),
                ('template', models.TextField()),
                ('object_types', models.ManyToManyField(limit_choices_to={'model__in': ['permission', 'group_permissions', 'group', 'user_groups', 'user_user_permissions', 'user', 'changeset', 'provisionset', 'webhook', 'customfield', 'region', 'site', 'rackgroup', 'rackrole', 'rack', 'rackreservation', 'manufacturer', 'devicetype', 'devicerole', 'platform', 'platformversion', 'device', 'devicelicense', 'consoleport', 'consoleserverport', 'powerport', 'poweroutlet', 'interface', 'frontport', 'rearport', 'devicebay', 'inventoryitem', 'virtualchassis', 'cable', 'powerpanel', 'powerfeed', 'tenantgroup', 'tenant', 'vrf_imports', 'vrf', 'rir', 'aggregate', 'role', 'prefix', 'ipaddress', 'overlaynetworkgroup', 'vlangroup', 'overlaynetwork', 'vlan', 'service_ipaddresses', 'service', 'clustertype', 'clustergroup', 'cluster', 'virtualmachine', 'provider', 'circuittype', 'circuit', 'circuittermination', 'routemap', 'bgpcommunity', 'bgpcommunitylist', 'bgpcommunitylistmember', 'bgpasn_networks', 'bgpasn', 'bgpdeviceasn', 'bgpneighbor']}, related_name='slack_messages', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Message',
            },
        ),
        migrations.CreateModel(
            name='SlackChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('messages', models.ManyToManyField(related_name='slack_channels', to='slack_integration.SlackMessage')),
            ],
            options={
                'verbose_name': 'Channel',
            },
        ),
    ]
